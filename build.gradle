buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
        }
    }
    dependencies {
        classpath group: 'com.techshroom', name: 'Aversion', version: '3.0.0'
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'aversion-util'
apply plugin: 'aversion-maven'
apply plugin: 'aversion-apt'
apply plugin: "com.github.hierynomus.license"

license {
    ext {
        name = rootProject.name
        organization = rootProject.organization
        url = rootProject.url
    }
    header = rootProject.file('HEADER.txt')
    ignoreFailures = false
    strictCheck = true
    include '**/*.java'
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

util {
    javaVersion = '1.8'
}

mavencfg {
    coords 'kenzierocks', 'AudioToMidi'
    description 'AudioToMidi'
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}
configurations.all {
   resolutionStrategy {
     // fail eagerly on version conflict (includes transitive dependencies)
     // e.g. multiple different versions of the same dependency (group and name are equal)
     failOnVersionConflict()

     // force certain versions of dependencies (including transitive)
    force 'com.google.guava:guava:22.0', 'org.slf4j:slf4j-api:1.7.25', 'com.google.code.findbugs:jsr305:3.0.1', 'com.google.code.gson:gson:2.8.1'
    force 'junit:junit:4.12'

     cacheDynamicVersionsFor 10, 'minutes'
     // don't cache changing modules at all
     cacheChangingModulesFor 0, 'seconds'
   }
}
ext.lwjglVersion = '3.1.3'

def addLWJGL(project, ext, natives) {
    // "lwjgl" or "lwjgl-ext"
    def lwjgl = "lwjgl" + (ext ? "-" + ext : "")
    def ver = project.lwjglVersion
    project.dependencies {
        compile group: 'org.lwjgl', name: lwjgl, version: ver
        if (natives) {
            compile group: 'org.lwjgl', name: lwjgl, version: ver, classifier: 'natives-macos'
            compile group: 'org.lwjgl', name: lwjgl, version: ver, classifier: 'natives-linux'
            compile group: 'org.lwjgl', name: lwjgl, version: ver, classifier: 'natives-windows'
        }
    }
}
dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'

    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '5.0.3'

    compile group: 'com.techshroom', name: 'jsr305-plus', version: '0.0.1'
    
    addLWJGL(project, '', true);
    addLWJGL(project, 'jemalloc', true);

    def guice = [group: 'com.google.inject', name: 'guice', version: '4.1.0']
    if (project.findProperty("debugging")) {
        println "Using no_aop guice for debugging!"
        guice.put('classifier', 'no_aop')
    }
    compile guice

    compile group: 'com.flowpowered', name: 'flow-math', version: '1.0.3'

	compile group: 'com.googlecode.soundlibs', name: 'mp3spi', version: '1.9.5.4'

    compile group: 'org.bytedeco.javacpp-presets', name: 'fftw-platform', version: '3.3.5-1.3'

    addAPTReqWComp group: 'com.google.guava', name: 'guava', version: '22.0'
    addAPT group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc3'
    addAPT group: 'com.google.auto.value', name: 'auto-value', version: '1.4.1'
    addAPTReq name: 'aopalliance'
    addAPTReq name: 'asm'
    addAPTReq name: 'auto-value'
    addAPTReq name: 'auto-common'
    addAPTReq name: 'cglib'
    addAPTReq name: 'commons-collections'
    addAPTReq name: 'commons-lang'
    addAPTReq name: 'dagger'
    addAPTReq name: 'javawriter'
    addAPTReq name: 'javax.inject'
    addAPTReq name: 'velocity'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-processing', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
    options.incremental = true
    options.fork = true
}

apply plugin: 'com.github.johnrengelman.shadow'
jar {
    manifest {
        attributes 'Main-Class': 'me.kenzierocks.a2m.v2.Main'
    }
}
